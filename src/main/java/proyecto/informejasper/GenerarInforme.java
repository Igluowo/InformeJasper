/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto.informejasper;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author erick
 */
public class GenerarInforme extends javax.swing.JFrame {

    /**
     * Creates new form GenerarInforme
     */
    
        String url;
    String usuario;
    String clave;
    public GenerarInforme(String url, String usuario, String clave) {
        this.url = url;
        this.usuario = usuario;
        this.clave = clave;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelFondo = new javax.swing.JPanel();
        panelA = new javax.swing.JPanel();
        etiquetaA = new javax.swing.JLabel();
        botonA = new javax.swing.JButton();
        panelB = new javax.swing.JPanel();
        etiquetaB = new javax.swing.JLabel();
        botonB = new javax.swing.JButton();
        comboBox = new javax.swing.JComboBox<>();
        etiquetaCreador = new javax.swing.JLabel();
        Titulo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Generar informe");
        setResizable(false);

        panelFondo.setBackground(new java.awt.Color(204, 183, 104));
        panelFondo.setForeground(new java.awt.Color(204, 153, 255));

        panelA.setBackground(new java.awt.Color(124, 124, 124));

        etiquetaA.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaA.setText("Generar Informe A");

        botonA.setText("Generar");
        botonA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelALayout = new javax.swing.GroupLayout(panelA);
        panelA.setLayout(panelALayout);
        panelALayout.setHorizontalGroup(
            panelALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelALayout.createSequentialGroup()
                .addContainerGap(137, Short.MAX_VALUE)
                .addGroup(panelALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonA, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(etiquetaA, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(102, 102, 102))
        );
        panelALayout.setVerticalGroup(
            panelALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelALayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(etiquetaA, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(botonA)
                .addGap(22, 22, 22))
        );

        panelB.setBackground(new java.awt.Color(124, 124, 124));

        etiquetaB.setForeground(new java.awt.Color(255, 255, 255));
        etiquetaB.setText("Generar Informe B");

        botonB.setText("Generar");
        botonB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBActionPerformed(evt);
            }
        });

        comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Toby Fox", "Scott Cawthon", "Nintendo", "Tequila works" }));

        etiquetaCreador.setText("Elija un creador de videojuego");

        javax.swing.GroupLayout panelBLayout = new javax.swing.GroupLayout(panelB);
        panelB.setLayout(panelBLayout);
        panelBLayout.setHorizontalGroup(
            panelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(comboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(etiquetaCreador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonB, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBLayout.createSequentialGroup()
                .addContainerGap(145, Short.MAX_VALUE)
                .addComponent(etiquetaB, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117))
        );
        panelBLayout.setVerticalGroup(
            panelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(etiquetaB)
                .addGap(18, 18, 18)
                .addComponent(etiquetaCreador)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonB))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        Titulo.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Titulo.setText("Generaci√≥n de informes de creadores y videojuegos");

        javax.swing.GroupLayout panelFondoLayout = new javax.swing.GroupLayout(panelFondo);
        panelFondo.setLayout(panelFondoLayout);
        panelFondoLayout.setHorizontalGroup(
            panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFondoLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Titulo)
                    .addComponent(panelA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        panelFondoLayout.setVerticalGroup(
            panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFondoLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botonBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBActionPerformed
        HashMap<String, Object> parametros = new HashMap();
        parametros.put("parametro", comboBox.getSelectedItem());
        Connection conexion = conexion();
        try {
            JasperPrint print = (JasperPrint) JasperFillManager.fillReport("src/main/java/proyecto/Reportes/ReporteParametro.jasper", parametros, conexion);
            JasperViewer.viewReport(print);
        } catch (JRException ex) {
            Logger.getLogger(GenerarInforme.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonBActionPerformed

    private void botonAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAActionPerformed
        Connection conexion = conexion();
        try {
            JasperPrint print = (JasperPrint) JasperFillManager.fillReport("src/main/java/proyecto/Reportes/creador.jasper", null, conexion);
            JasperViewer.viewReport(print);
        } catch (JRException ex) {
            Logger.getLogger(GenerarInforme.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonAActionPerformed

    private Connection conexion() {
        Connection conexion = null;
        try {
            System.out.println(usuario);
            System.out.println(clave);
            conexion = DriverManager.getConnection("jdbc:sqlserver://" + url + ":1433;databaseName=master;TrustServerCertificate=true;",
                    usuario, clave);
            
            crearBaseDatos(conexion);
            conexion = DriverManager.getConnection("jdbc:sqlserver://" + url + ":1433;databaseName=juegosERMB;TrustServerCertificate=true;",
                    usuario, clave);
            crearBase(conexion);
            System.out.println("Conexion exitosa");
            return conexion;
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Los datos de conexion no son correctos", "Error de conexion", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
        } 
        return conexion;
    }
    
    private void crearBaseDatos(Connection conexion) throws SQLException {
         Statement crear = conexion.createStatement();
         
        String SQL = """
                     IF EXISTS (SELECT 1 FROM sys.databases WHERE name = 'juegosERMB')
                     BEGIN
                         DROP DATABASE [juegosERMB]
                     END
                     CREATE DATABASE [juegosERMB]""";
        crear.execute(SQL);
    }

    private void crearBase(Connection conexion) throws SQLException, SQLException {
        Statement crear = conexion.createStatement();
        String SQL
                = """

                  /****** Object:  Table [dbo].[Creador]    Script Date: 12/01/2024 17:50:20 ******/
                  SET ANSI_NULLS ON

                  SET QUOTED_IDENTIFIER ON

                  CREATE TABLE [dbo].[Creador](
                  \t[IdC] [int] NOT NULL,
                  \t[Creador] [varchar](255) NULL,
                  \t[Pais] [varchar](255) NULL,
                  \t[puntuacion] [int] NULL,
                  PRIMARY KEY CLUSTERED 
                  (
                  \t[IdC] ASC
                  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                  ) ON [PRIMARY]

                  /****** Object:  Table [dbo].[Juegos]    Script Date: 12/01/2024 17:50:20 ******/
                  SET ANSI_NULLS ON

                  SET QUOTED_IDENTIFIER ON

                  CREATE TABLE [dbo].[Juegos](
                  \t[idJ] [int] IDENTITY(1,1) NOT NULL,
                  \t[juego] [varchar](255) NULL,
                  \t[fechaCreacion] [date] NULL,
                  \t[Id_Tipo] [int] NULL,
                  \t[idC] [int] NULL,
                  \t[precio] [float] NULL,
                  PRIMARY KEY CLUSTERED 
                  (
                  \t[idJ] ASC
                  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                  ) ON [PRIMARY]

                  /****** Object:  Table [dbo].[tipos]    Script Date: 12/01/2024 17:50:20 ******/
                  SET ANSI_NULLS ON

                  SET QUOTED_IDENTIFIER ON

                  CREATE TABLE [dbo].[tipos](
                  \t[Id_tipo] [int] NOT NULL,
                  \t[Tipo] [varchar](255) NULL,
                  PRIMARY KEY CLUSTERED 
                  (
                  \t[Id_tipo] ASC
                  )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                  ) ON [PRIMARY]

                  INSERT [dbo].[Creador] ([IdC], [Creador], [Pais], [puntuacion]) VALUES (1, N'Toby Fox', N'Estados Unidos', 10)
                  INSERT [dbo].[Creador] ([IdC], [Creador], [Pais], [puntuacion]) VALUES (2, N'Scott Cawthon', N'Estados Unidos', 8)
                  INSERT [dbo].[Creador] ([IdC], [Creador], [Pais], [puntuacion]) VALUES (3, N'Zeekerss', N'Estados Unidos', 9)
                  INSERT [dbo].[Creador] ([IdC], [Creador], [Pais], [puntuacion]) VALUES (4, N'Nintendo', N'Jap\u00f3n', 5)
                  INSERT [dbo].[Creador] ([IdC], [Creador], [Pais], [puntuacion]) VALUES (5, N'Tequila works', N'Espa\u00f1a', 7)

                  SET IDENTITY_INSERT [dbo].[Juegos] ON 
                  
                  INSERT [dbo].[Juegos] ([idJ], [juego], [fechaCreacion], [Id_Tipo], [idC], [precio]) VALUES (83, N'Undertale', CAST(N'2015-09-15' AS Date), 1, 1, 8.3)
                  INSERT [dbo].[Juegos] ([idJ], [juego], [fechaCreacion], [Id_Tipo], [idC], [precio]) VALUES (84, N'Deltarune', CAST(N'2018-10-31' AS Date), 1, 1, 15.2)
                  INSERT [dbo].[Juegos] ([idJ], [juego], [fechaCreacion], [Id_Tipo], [idC], [precio]) VALUES (85, N'Five night at Freddys', CAST(N'2014-08-08' AS Date), 2, 2, 10.5)
                  INSERT [dbo].[Juegos] ([idJ], [juego], [fechaCreacion], [Id_Tipo], [idC], [precio]) VALUES (86, N'Five night at Freddys 2', CAST(N'2014-11-11' AS Date), 2, 2, 10.5)
                  INSERT [dbo].[Juegos] ([idJ], [juego], [fechaCreacion], [Id_Tipo], [idC], [precio]) VALUES (87, N'Five night at Freddys 3', CAST(N'2015-03-02' AS Date), 2, 2, 10.5)
                  INSERT [dbo].[Juegos] ([idJ], [juego], [fechaCreacion], [Id_Tipo], [idC], [precio]) VALUES (88, N'Five night at Freddys 4', CAST(N'2015-07-23' AS Date), 2, 2, 10.5)
                  INSERT [dbo].[Juegos] ([idJ], [juego], [fechaCreacion], [Id_Tipo], [idC], [precio]) VALUES (89, N'Five night at Freddys Sister Location', CAST(N'2016-10-07' AS Date), 2, 2, 10.5)
                  INSERT [dbo].[Juegos] ([idJ], [juego], [fechaCreacion], [Id_Tipo], [idC], [precio]) VALUES (90, N'Lethal Company', CAST(N'2023-10-23' AS Date), 2, 3, 9.55)
                  INSERT [dbo].[Juegos] ([idJ], [juego], [fechaCreacion], [Id_Tipo], [idC], [precio]) VALUES (91, N'The Legend of Zelda Tears of the Kingdom', CAST(N'2023-05-12' AS Date), 1, 4, 59.99)
                  INSERT [dbo].[Juegos] ([idJ], [juego], [fechaCreacion], [Id_Tipo], [idC], [precio]) VALUES (92, N'Song of the Nunu', CAST(N'2023-11-01' AS Date), 3, 5, 29.99)
                  SET IDENTITY_INSERT [dbo].[Juegos] OFF

                  INSERT [dbo].[tipos] ([Id_tipo], [Tipo]) VALUES (1, N'RPG')
                  INSERT [dbo].[tipos] ([Id_tipo], [Tipo]) VALUES (2, N'Terror')
                  INSERT [dbo].[tipos] ([Id_tipo], [Tipo]) VALUES (3, N'Aventura')

                  ALTER TABLE [dbo].[Juegos]  WITH CHECK ADD  CONSTRAINT [FK_idCreador] FOREIGN KEY([idC])
                  REFERENCES [dbo].[Creador] ([IdC])
                  ALTER TABLE [dbo].[Juegos] CHECK CONSTRAINT [FK_idCreador]
                  ALTER TABLE [dbo].[Juegos]  WITH CHECK ADD  CONSTRAINT [FK_idTipo] FOREIGN KEY([Id_Tipo])
                  REFERENCES [dbo].[tipos] ([Id_tipo])
                  ALTER TABLE [dbo].[Juegos] CHECK CONSTRAINT [FK_idTipo]
                  """;
        crear.execute(SQL);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Titulo;
    private javax.swing.JButton botonA;
    private javax.swing.JButton botonB;
    private javax.swing.JComboBox<String> comboBox;
    private javax.swing.JLabel etiquetaA;
    private javax.swing.JLabel etiquetaB;
    private javax.swing.JLabel etiquetaCreador;
    private javax.swing.JPanel panelA;
    private javax.swing.JPanel panelB;
    private javax.swing.JPanel panelFondo;
    // End of variables declaration//GEN-END:variables
}
